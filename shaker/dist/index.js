// @bun
import*as J from"@babel/parser";import Y from"@babel/traverse";var{file:_,write:A}=globalThis.Bun;import B from"fast-glob";class ${files=[];classes=new Set;importMap=new Map;resolvedImports=new Map;StateValues=new Map;constructor({include:j=[]}={}){j.forEach((q)=>this.classes.add(q))}async load(j){let q=await B(j);for(let z of q)if(z.endsWith(".tsx")){let F=await _(z).text(),M=J.parse(F,{sourceType:"module",plugins:["jsx","typescript","decorators"]});Y(M,{AssignmentExpression:(H)=>{let D=H.node.left;if(D.type==="MemberExpression"){if(K(D.property)==="value"){let Q=K(D.object);if(Q){let O=H.scope.getBinding(Q);if(O){let R=Z(O.path.node);if(R&&K(R)==="State")U.call(this,H.node.right,Q)}}}}},CallExpression:(H)=>{let D=H.node;if(D.type==="CallExpression"){let{arguments:Q,callee:O}=D,R=K(O);if(R&&["add","remove","toggle"].includes(R)){if(O.type==="MemberExpression"){let V=K(O.object);if(V){let W=H.scope.getBinding(V);if(W){let X=Z(W.path.node);if(X){if(K(X)==="$")Q.forEach((w)=>{L.call(this,w,H)})}}}}}}},JSXAttribute:(H)=>{if(H.node.name.name==="class"){let D=H.node.value;if(D&&D.type==="StringLiteral")L.call(this,D,H);else if(D&&D.type==="JSXExpressionContainer")L.call(this,D.expression,H)}}})}return this}setState(j,q){if(!this.StateValues.has(j))this.StateValues.set(j,new Set([q]));else this.StateValues.get(j).add(q)}async export(j,q="shaker"){let z=JSON.stringify([...this.classes.values()].filter((F)=>F));await A(j+"/"+q+".json",z)}get shaker(){return[...this.classes]}}function U(j,q){switch(j.type){case"StringLiteral":this.setState(q,j.value);break;case"MemberExpression":U.call(this,j.property,q);break;case"Identifier":this.setState(q,j.name);break;case"ArrayExpression":j.elements.forEach((z)=>{if(z)U.call(this,z,q)});break;default:break}}async function L(j,q){switch(j.type){case"StringLiteral":j.value.split(/\s+/).forEach((F)=>this.classes.add(F));break;case"CallExpression":j.arguments.forEach(async(F)=>{await L.call(this,F,q)});break;case"ArrayExpression":j.elements.forEach(async(F)=>{if(F)await L.call(this,F,q)});break;case"MemberExpression":if(j.property.type==="Identifier")this.classes.add(j.property.name);break;case"ConditionalExpression":await L.call(this,j.consequent,q),await L.call(this,j.alternate,q);break;case"Identifier":let z=q.scope.getBinding(j.name);if(z){let F=z.path.node.type;if(F==="VariableDeclarator"){let M=this.StateValues.get(j.name);if(M)M.forEach((H)=>H.split(/\s+/).forEach((D)=>this.classes.add(D)));await I.call(this,z.path.node,q)}else if(F==="ImportSpecifier"){let M=z.path.node.imported;switch(M.type){case"Identifier":this.classes.add(M.name);break}}}break;default:break}}async function I(j,q){switch(j.type){case"VariableDeclarator":if(j.id.type==="Identifier"){let z=j.init;if(z&&z.type==="CallExpression")z.arguments.forEach(async(F)=>{await L.call(this,F,q)})}break;default:break}}function K(j){switch(j.type){case"Identifier":return j.name;case"ObjectPattern":return"";case"CallExpression":return K(j.callee);case"MemberExpression":return K(j.property);default:break}}function Z(j){switch(j.type){case"VariableDeclarator":return j.init;default:break}}export{$ as Shaker};

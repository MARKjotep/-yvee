// @bun
import{readdirSync as H,rmSync as R,statSync as y,unlinkSync as P,watch as V}from"fs";import K from"path";import{mkdirSync as m,writeFileSync as Qn,existsSync as z}from"fs";var w=(t)=>typeof t==="function";var l=(t)=>Array.isArray(t);var D=(t)=>{return l(t)?t:[t]};class x{static set i(t){console.info(...D(t))}static set e(t){console.error(...D(t))}static set w(t){console.warn(...D(t))}}var Z=(t)=>Array.from({length:t},(n,i)=>i),q="ABCDEFGHIJKLMNOPQRSTUVWXYZ",U="abcdefghijklmnopqrstuvwxyz";var h=(t)=>JSON.stringify(t);var s=(t)=>{let n=q+U,i=Z(10).join("");return Array.from({length:t},(o,r)=>n+(r?i:"")).reduce((o,r)=>{return o+=r.charAt(Math.floor(Math.random()*r.length))},"")};var{entries:f,fromEntries:$}=Object;var g=Object.assign;var B=(t)=>{if(z(t))return!0;return m(t,{recursive:!0}),!0};import{rollup as _}from"rollup";class M{dir;out;files;external;drop;target;define={YVEE_ID:()=>s(4)};exclude=[];hashAsset;plugins=[];successFN;clearing=!1;minify;constructor({files:t,target:n="browser",define:i={},hashAsset:o,external:r=[],drop:u=[],plugins:E=[],out:F="./client",dir:G="./src",base:J="",minify:N={},successFN:b}){this.out=F+J,this.dir=G+J,this.minify={identifiers:!0,whitespace:!0,syntax:!0},g(this.minify,N),this.files=t.map((I)=>(this.dir+"/"+I).replaceAll("//","/")),this.hashAsset=o===void 0?!1:o,this.external=r,this.drop=u,this.plugins=E,B(this.out),this.target=n,this.successFN=b,g(this.define,i)}clear(t={exclude:[],all:!1}){t.exclude&&t.exclude.length&&this.exclude.push(...t.exclude),this.clearing=!0;let n=(i)=>{let o=H(i);if(o.length==0){R(i,{recursive:!0});return}o.forEach((r)=>{if(r.startsWith(".")||!t.all&&(r.endsWith(".html")||this.exclude.includes(r)))return;let u=K.join(i,r);if(y(u).isDirectory())n(u);else P(u)})};return n(this.out),this}async build(){let t=`[dir]/[name]${this.hashAsset?"-[hash]":""}.[ext]`;if(this.files.length)try{let n=await Bun.build({entrypoints:this.files,outdir:this.out,splitting:!0,minify:this.minify,target:this.target??"browser",naming:{chunk:"[dir]/[name]-[hash].[ext]",entry:"[dir]/[name].[ext]",asset:t},define:{...c(this.define)},loader:{".css":"file"},external:this.external,drop:this.drop,plugins:this.plugins});if(n.success){let i=new Date().toLocaleTimeString();x.i=`builder @ ${i}`;try{await this.successFN?.()}catch(o){x.i=o}}else x.i=n.logs}catch(n){x.i=n}return this}async watch(t=()=>!0){let n=V(this.dir,{recursive:!0},async(i,o)=>{if(o&&t(o)){this.clearing&&this.clear();try{await this.build()}catch(r){console.error(r)}}});process.on("SIGINT",()=>{console.log(`
watcher closed...`),n.close(),process.exit(0)})}set onsuccess(t){this.successFN=t}}var c=(t)=>{return $(f(t).map(([n,i])=>{let o=i;if(w(i))o=i();return[n,h(o)]}))};async function Rn({input:t,output:n,format:i="es",external:o=[],plugins:r=[],fn:u}){await(await _({input:t,plugins:r,external:o})).write({file:n,format:i});let F=new Date().toLocaleTimeString();x.i=`rollup @ ${F}`,u?.()}export{M as default,Rn as RollUP};
